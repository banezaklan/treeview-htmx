"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.html = void 0;
const elysia_1 = require("elysia");
const stream_1 = require("stream");
const handler_1 = require("./handler");
const utils_1 = require("./utils");
const suspense_1 = require("@kitajs/html/suspense");
function html(options = {}) {
    // Defaults
    options.contentType ??= 'text/html; charset=utf8';
    options.autoDetect ??= true;
    options.isHtml ??= utils_1.isHtml;
    options.autoDoctype ??= true;
    let instance = new elysia_1.Elysia({ name: '@elysiajs/html' }).derive(({ set }) => {
        return {
            html(value, ...args) {
                if (typeof value === 'function') {
                    value = (0, suspense_1.renderToStream)((rid) => value(rid, ...args));
                }
                return (0, handler_1.handleHtml)(value, options, 'content-type' in set.headers);
            }
        };
    });
    if (options.autoDetect) {
        // handlerPossibleHtml should be present on a lot of stack traces, so we should not
        // use anonymous functions here.
        instance = instance.onAfterHandle(function handlerPossibleHtml({ response: value, set }) {
            if (
            // Simple html string
            (0, utils_1.isHtml)(value) ||
                // @kitajs/html stream
                (value instanceof stream_1.Readable && 'rid' in value)) {
                return (0, handler_1.handleHtml)(value, options, 'content-type' in set.headers);
            }
            return value;
        });
    }
    return instance;
}
exports.html = html;
